name: Update App

on:
  push:
    branches: [main]

permissions:
  contents: read

env:
  REPO_PATH: /home/jbeauchemin/chalets-horizon-nature
  BUILD_FILES_PATH: /home/jbeauchemin/deploy-build-files

jobs:
  deploy-app:
    runs-on: ubuntu-22.04
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: corepack enable && yarn install

      - name: Create backend .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          directory: backend/
          envkey_HOST: localhost
          envkey_PORT: 1337
          envkey_STRAPI_URL: https://api.chaletshorizonnature.com
          envkey_APP_KEYS: ${{ secrets.STRAPI_APP_KEYS }}
          envkey_API_TOKEN_SALT: ${{ secrets.STRAPI_API_TOKEN_SALT }}
          envkey_ADMIN_JWT_SECRET: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          envkey_JWT_SECRET: ${{ secrets.STRAPI_JWT_SECRET }}
          envkey_TRANSFER_TOKEN_SALT: ${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}
          envkey_DATABASE_CLIENT: postgres
          envkey_DATABASE_HOST: 127.0.0.1
          envkey_DATABASE_PORT: 5432
          envkey_DATABASE_NAME: chalets-horizon-nature
          envkey_DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          envkey_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          envkey_DATABASE_SSL: false

      - name: Create frontend .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          directory: frontend/
          envkey_NEXT_PUBLIC_STRAPI_API_TOKEN: ${{ secrets.NEXT_PUBLIC_STRAPI_API_TOKEN }}
          envkey_NEXT_PUBLIC_PAGE_LIMIT: 6
          envkey_NEXT_PUBLIC_STRAPI_FORM_SUBMISSION_TOKEN: ${{ secrets.STRAPI_FORM_SUBMISSION_TOKEN }}
          envkey_NEXT_PUBLIC_STRAPI_API_URL: https://api.chaletshorizonnature.com
          envkey_GOOGLE_MAP_API_KEY: ${{ secrets.GOOGLE_MAP_API_KEY }}

      - name: Build the app backend
        run: |
          cd backend/
          yarn install
          NODE_ENV=production yarn build

#      - name: Build the app frontend
#        run: |
#          cd frontend/
#          yarn install
#          NODE_ENV=production yarn build

      - name: Zip backend files
        uses: vimtor/action-zip@v1.2
        with:
          files: backend/build/ backend/.env
          dest: backend.zip

      - name: Zip frontend files
        uses: vimtor/action-zip@v1.2
        with:
          files: frontend/.env
#          files: frontend/.next/ frontend/.env
          dest: frontend.zip

      - name: Transfer files to Digital Ocean Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_SSH_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: 22
          source: "backend.zip,frontend.zip"
          target: ${{ env.BUILD_FILES_PATH }}

      - name: Setup new build
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_SSH_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: 22
          script: |
            cd ${{env.REPO_PATH}} && git pull
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ${{env.REPO_PATH}} && yarn setup
            unzip ${{ env.BUILD_FILES_PATH }}/backend.zip -d ${{env.REPO_PATH}}/backend/build
            mv -f ${{env.REPO_PATH}}/backend/build/.env ${{env.REPO_PATH}}/backend/.env
            unzip ${{ env.BUILD_FILES_PATH }}/frontend.zip -d ${{env.REPO_PATH}}/frontend/.next
            mv -f ${{env.REPO_PATH}}/frontend/.next/.env ${{env.REPO_PATH}}/frontend/.env
            cd ${{env.REPO_PATH}}/frontend && NODE_ENV=production yarn build
            cd ~ && pm2 startOrRestart ecosystem.config.js
            rm -rf ${{ env.BUILD_FILES_PATH }}